<?xml version="1.0" encoding="UTF-8"?>
<content xmlns:j="http://www.jahia.org/jahia/1.0" xmlns:jcr="http://www.jcp.org/jcr/1.0">
   <modules jcr:primaryType="jnt:modules">
      <maintenancepersite j:dependencies="default"
                          j:modulePriority="0"
                          j:moduleType="module"
                          j:title="maintenancePerSite"
                          jcr:mixinTypes="jmix:hasExternalProviderExtension"
                          jcr:primaryType="jnt:module">
         <sources j:title="maintenancePerSite (1.0.0-SNAPSHOT)"
                  jcr:mixinTypes="jmix:hasExternalProviderExtension"
                  jcr:primaryType="jnt:moduleVersionFolder"
                  j:staticMountPointProviderKey="module-maintenancepersite-1.0.0-SNAPSHOT">
            <src jcr:mixinTypes="jmix:hasExternalProviderExtension"
                 jcr:primaryType="jnt:folder">
               <main jcr:mixinTypes="jmix:hasExternalProviderExtension"
                     jcr:primaryType="jnt:folder">
                  <java jcr:mixinTypes="jmix:hasExternalProviderExtension"
                        jcr:primaryType="jnt:javaPackageFolder">
                     <org jcr:mixinTypes="jmix:hasExternalProviderExtension"
                          jcr:primaryType="jnt:javaPackageFolder">
                        <jahia jcr:mixinTypes="jmix:hasExternalProviderExtension"
                               jcr:primaryType="jnt:folder">
                           <community jcr:mixinTypes="jmix:hasExternalProviderExtension"
                                      jcr:primaryType="jnt:javaPackageFolder">
                              <maintenancepersite jcr:mixinTypes="jmix:hasExternalProviderExtension"
                                                  jcr:primaryType="jnt:javaPackageFolder">
                                 <filter jcr:mixinTypes="jmix:hasExternalProviderExtension"
                                         jcr:primaryType="jnt:javaPackageFolder">
                                    <MaintenancePerSiteFilter.java jcr:primaryType="jnt:javaSourceFile"
                                                                   sourceCode="package org.jahia.community.maintenancepersite.filter;&#xA;&#xA;import org.jahia.api.Constants;&#xA;import org.jahia.services.content.JCRNodeWrapper;&#xA;import org.jahia.services.content.decorator.JCRSiteNode;&#xA;import org.jahia.services.render.RenderContext;&#xA;import org.jahia.services.render.Resource;&#xA;import org.jahia.services.render.filter.AbstractFilter;&#xA;import org.jahia.services.render.filter.RenderChain;&#xA;import org.jahia.services.render.filter.RenderFilter;&#xA;import org.kie.internal.io.ResourceChangeNotifier;&#xA;import org.osgi.service.component.annotations.Activate;&#xA;import org.osgi.service.component.annotations.Component;&#xA;import org.slf4j.Logger;&#xA;import org.slf4j.LoggerFactory;&#xA;&#xA;@Component(service = RenderFilter.class)&#xA;public class MaintenancePerSiteFilter extends AbstractFilter {&#xA; &#xA; &#xA; private static Logger log = LoggerFactory.getLogger(MaintenancePerSiteFilter.class);&#xA; &#xA;    public static String MIXIN_MAINTENANCE = &#34;jmix:maintenancePerSite&#34;;&#xA; &#xA; &#xA; &#xA;    @Activate&#xA;    public void activate() {&#xA;        setPriority(3);&#xA;        setApplyOnEditMode(false);&#xA;        setSkipOnAjaxRequest(true);&#xA;        setApplyOnConfigurations(&#34;page&#34;);&#xA;        setApplyOnTemplateTypes(&#34;html,html-*&#34;);&#xA;    }&#xA;    @Override&#xA;    public String prepare(RenderContext renderContext, Resource resource, RenderChain chain) throws Exception {&#xA;        return super.prepare(renderContext, resource, chain);&#xA;    }&#xA;    @Override&#xA;    public String execute(String previousOut, RenderContext renderContext, Resource resource, RenderChain chain) throws Exception {&#xA;        String output = super.execute(previousOut, renderContext, resource, chain);&#xA;        &#xA;        if (renderContext.getWorkspace().equals(Constants.LIVE_WORKSPACE) &amp;&amp; resource.getNode().getResolveSite().isNodeType(MIXIN_MAINTENANCE)) {&#xA;         JCRSiteNode site = resource.getNode().getResolveSite();&#xA;         JCRNodeWrapper maintenancePage = (JCRNodeWrapper)site.getProperty(&#34;maintenancePage&#34;).getNode();&#xA;         &#xA;         if (maintenancePage != null &amp;&amp; !resource.getNodePath().equals(maintenancePage.getPath())) {&#xA;          log.debug(&#34;Maintenance Page &#34; + maintenancePage.getPath() + &#34; loaded&#34;);&#xA;          renderContext.getResponse().sendRedirect(maintenancePage.getUrl());&#xA;          return &#34;&#34;;&#xA;          &#xA;          &#xA;         } else {&#xA;          log.warn(&#34;Mixin &#34; + MIXIN_MAINTENANCE + &#34; is set on Site, but no valid maintenance Page found.&#34;);&#xA;         }&#xA;        }&#xA;        return output;&#xA;    }&#xA; &#xA;}&#xA;"/>
                                 </filter>
                              </maintenancepersite>
                           </community>
                        </jahia>
                     </org>
                  </java>
                  <resources jcr:mixinTypes="jmix:hasExternalProviderExtension"
                             jcr:primaryType="jnt:folder">
                     <META-INF jcr:mixinTypes="jmix:hasExternalProviderExtension"
                               jcr:primaryType="jnt:metaInfFolder">
                        <definitions.cnd jcr:primaryType="jnt:definitionFile"
                                         sourceCode="&lt;jmix = 'http://www.jahia.org/jahia/mix/1.0'&gt;&#xA;&#xA;[jmix:maintenancePerSite] mixin&#xA; extends = jnt:virtualsite&#xA; - maintenancePage (weakreference, picker[type='page']) mandatory&#xA;"/>
                     </META-INF>
                  </resources>
               </main>
            </src>
         </sources>
         <files jcr:primaryType="jnt:folder"/>
         <contents jcr:primaryType="jnt:contentFolder"/>
         <templates j:rootTemplatePath="/base" jcr:primaryType="jnt:templatesFolder">
            <files jcr:primaryType="jnt:folder"/>
            <contents jcr:primaryType="jnt:contentFolder"/>
         </templates>
      </maintenancepersite>
   </modules>
</content>